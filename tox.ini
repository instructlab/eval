# SPDX-License-Identifier: Apache-2.0

[tox]
# py3-unit runs unit tests with 'python3'
# py312-unit runs the same tests with 'python3.12'
envlist = ruff, lint, mypy, py3-{unit, functional}
minversion = 4.4

[testenv]
description = run tests (unit, unitcov, functional)
passenv =
    CMAKE_ARGS
# Use PyTorch CPU build instead of CUDA build in test envs. CUDA dependencies
# are huge. This reduces venv from 5.7 GB to 1.5 GB.
setenv =
    PIP_EXTRA_INDEX_URL=https://download.pytorch.org/whl/cpu
    CMAKE_ARGS={env:CMAKE_ARGS:-DLLAMA_NATIVE=off}
    ILAB_MAX_STABLE_VRAM_WAIT=0
package = wheel
wheel_build_env = pkg
install_command = pip install \
                  --use-feature fast-deps \
                  -c constraints-dev.txt \
                  {opts} {packages}
# equivalent to `pip install instructlab[cpu]`
extras = 
    cpu
    leaderboard
deps =
    pytest
    pytest-asyncio
    pytest-cov
    pytest-html
commands =
    unit: {envpython} -m pytest {posargs:tests}
    unitcov: {envpython} -W error::UserWarning -m pytest --cov=instructlab.eval --cov-report term --cov-report=html:coverage-{env_name} --cov-report=xml:coverage-{env_name}.xml --html=durations/{env_name}.html {posargs:tests -m "not (examples or slow)"}
    functional: ./scripts/functional-tests.sh
allowlist_externals =
    functional: ./scripts/functional-tests.sh

# format, check, and linting targets don't build and install the project to
# speed up testing.
[testenv:lint]
description = lint with pylint
skip_install = true
skipsdist = true
deps = -r requirements-dev.txt
commands =
    {envpython} -m pylint --load-plugins pylint_pydantic src/instructlab/eval/

[testenv:fastlint]
description = fast lint with pylint (without 3rd party modules)
skip_install = true
skipsdist = true
deps =
    pylint
    pylint-pydantic
commands =
    {envpython} -m pylint --load-plugins pylint_pydantic {posargs:--disable=import-error src/instructlab/eval/}

[testenv:ruff]
description = reformat and fix code with Ruff (and isort)
skip_install = True
skipsdist = true
# keep in sync with .pre-commit-config.yaml
deps =
    ruff
    isort
# supports 'fix', 'check', or abitrary args to 'ruff' command
commands =
    ./scripts/ruff.sh {posargs:fix}
allowlist_externals = ./scripts/ruff.sh

[testenv:mypy]
description = Python type checking with mypy
deps =
  mypy
  types-tqdm
  types-PyYAML
  pytest
commands =
  mypy src

[testenv:py3]
basepython = python3.12

[testenv:py3-unit]
basepython = {[testenv:py3]basepython}

[testenv:py3-functional]
basepython = {[testenv:py3]basepython}
passenv =
    {[testenv]passenv}
    TEST_DIR

[gh]
python =
    3.11 = py311-{unitcov, functional}
    3.12 = py312-{unitcov, functional}
    3.13 = py313-{unitcov, functional}
    3.14 = py314-{unitcov, functional}
    3.15 = py315-{unitcov, functional}
    3.16 = py316-{unitcov, functional}

[testenv:constraints]
description = Generate new constraints file(s)
basepython = {[testenv:py3]basepython}
skip_install = True
skipsdist = true
deps =
    uv==0.7.8
commands = {posargs}
allowlist_externals = *
